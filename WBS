ðŸ“˜ WORK BREAKDOWN STRUCTURE (WBS)

Project Title: Web-Based Project (PM A01 Repository)
Type: Hybrid (Product + Process Oriented)
Scope: Development of an interactive project management web system featuring multiple views (index, comparison, library, process, etc.) using JavaScript, HTML, and JSON data models.

Level 1 â€” Project: Web-Based PM Application

Project Management
1.1 Requirement Collection and Scope Definition
1.2 Schedule & Resource Planning
1.3 Progress Monitoring and Control
1.4 Risk Management and Communication

System & Architecture Design
2.1 System Architecture Layout (Frontend, Models, Data)
2.2 Define Data Flow (User â†” Model â†” JSON)
2.3 UI/UX Design and Navigation Planning
2.4 Define Project Folder Structure and Setup

Frontend Development
3.1 User Interface Pages (HTML)
  3.1.1 pm_index.html â€“ Home Page Development
  3.1.2 pm_start.html â€“ Introduction / Entry Module
  3.1.3 pm_library.html â€“ Book Library Interface
  3.1.4 pm_comparison.html â€“ Book Comparison Page
  3.1.5 pm_process.html â€“ Project Process View
  3.1.6 pm.html â€“ Main Aggregator Page

3.2 Frontend Logic (JavaScript)
  3.2.1 pm_app.js â€“ Core Application Logic
  3.2.2 UI Component Functions (Navigation, DOM Updates)
  3.2.3 Event Handling and Interaction Scripts
  3.2.4 Data Fetch and Integration with JSON Models

3.3 Frontend Styling (CSS)
  3.3.1 pm_styles.css â€“ Global Layout & Theme
  3.3.2 Component-Specific Styling (Cards, Tables, Buttons)
  3.3.3 Responsive Design Adjustments

Backend / Model Layer
4.1 Data Models (JS Files)
  4.1.1 Bookmark.js â€“ Bookmark Data Structure & Logic
  4.1.2 Scenario.js â€“ Scenario Handling Logic
  4.1.3 Topic.js â€“ Topic Management Logic

4.2 Data Management
  4.2.1 pm_data.json â€“ Dataset Creation and Structuring
  4.2.2 Data Validation and Format Consistency
  4.2.3 Data Fetch and Synchronization with Frontend

Integration & Testing
5.1 Unit Testing of Models (Bookmark, Scenario, Topic)
5.2 Integration Testing (Frontend â†” Data)
5.3 Functional Testing of Each HTML Page
5.4 UI/UX Testing and Debugging
5.5 Data Accuracy Validation

Deployment
6.1 Prepare Build/Deploy Package
6.2 Host Application (Local/Remote Server)
6.3 Validate Deployment
6.4 Post-Deployment Verification

Documentation & Handover
7.1 Technical Documentation (Code Comments, Architecture Notes)
7.2 User Manual and Instructions
7.3 Final Report and Project Closure

ðŸ“„ WBS DICTIONARY
WBS ID	Element Name	Description	Deliverables / Output	Acceptance Criteria
1.0	Project Management	Planning, scheduling, and control of project tasks	Project charter, schedule, risk plan	Approved project plan
2.0	System & Architecture Design	Define overall structure, logic flow, and UI navigation	Architecture diagram, wireframes	Logical structure validated
3.1	Frontend Pages	HTML pages defining views	Functional HTML interfaces	All pages load correctly and link properly
3.2	Frontend Logic	JavaScript controlling app behavior	pm_app.js functions integrated	App functions without runtime errors
3.3	Frontend Styling	CSS rules for design and responsiveness	pm_styles.css	Visual consistency and responsiveness confirmed
4.1	Data Models	JS model files representing app logic	Bookmark.js, Scenario.js, Topic.js	Models load and operate correctly
4.2	Data Management	Data storage and retrieval logic	pm_data.json structured dataset	Data correctly linked and displayed
5.0	Testing	Ensure all modules function as expected	Test logs, error fixes	All tests passed
6.0	Deployment	Package, host, and verify final app	Hosted version / server files	Application deployed and accessible
7.0	Documentation	Record all procedures and deliverables	README, report, manuals	Documentation complete and signed off
